'scopeName': 'source.ksp-cfg'
'filetypes': ['cfg', 'craft', 'sfs']
'name': 'Kerbal Space Program Config'
'patterns': [
    {
        'match': '(//.*)'
        'captures':
            '0': 'name': 'comment.line.double-slash.kspcfg'
        'comment': 'Anything after 2 slashes is a comment.'
    }
    {
        'comment': 'Node type declaration'
        'match': '^\\s*([\\w]+(?:/[\\w]+)*)\\s*(?=\\{|//|$)'
        'captures':
            '1': 'name': 'support.class.kspcfg'
    }
    {
        'comment': 'Node name'
        'match': '(name)\\s*=\\s*(.+?)(?=//|\\}|$)'
        'captures':
            '1': 'name': 'variable.other.kspcfg'
            '2': 'name': 'entity.name.function.kspcfg'
    }
    {
        'comment': 'Keys are a name, plus a value'
        'begin': '(\\w+ ?\\w+)\\s*='
        'beginCaptures':
            '1': 'name': 'variable.other.kspcfg'
        'patterns': [
            {
                'include': '#datatypes'
            }
        ]
        'end': '(?=//|\\}|$)'
    }
    {
        'comment': 'Module manager key edit, as described by https://github.com/sarbian/ModuleManager/wiki/Module-Manager-Syntax#operators-available-in-patches---and-their-ordering'
        'begin': '([-@%!+$#]?)([\\w*?]+)(?=.*=)'
        'beginCaptures':
            '1': 'name': 'support.function.kspcfg.mm'
            '2': 'name': 'variable.other.kspcfg.mm'
        'patterns': [
            { 'include': '#needs-block' }
            {
                'begin': '(?:,\\s*([\\d*]))?\\s*='
                'beginCaptures':
                    '1': 'name': 'constant.numeric.kspcfg.mm'
                'patterns': [
                    { 'include': '#datatypes' }
                ]
                'end': '(?=//|\\}|$)'
            }
        ]
        'end': '(?=//|\\}|$)'
    }
    {
        'comment': 'Module manager node edit, as described by https://github.com/sarbian/ModuleManager/wiki/Module-Manager-Syntax#operators-available-in-patches---and-their-ordering'
        'begin': '([-@%!+$#])(\\w+)(?!.*=)(?:\\[([\\w*?]*)\\])'
        'beginCaptures':
            '1': 'name': 'support.function.kspcfg.mm'
            '2': 'name': 'support.class.kspcfg'
            '3': 'name': 'entity.name.function.kspcfg.mm'
        'patterns': [
            { 'include': '#needs-block' }
            { 'include': '#has-block' }
            {
                'match': '(:FOR|:BEFORE|:AFTER)\\[(\\w+)\\]'
                'captures':
                    '1': 'name': 'support.function.kspcfg.mm'
                    '2': 'name': 'entity.name.function.kspcfg.mm'
            }
            {
                'match': ':FINAL'
                'captures':
                    '0': 'name': 'storage.type.kspcfg.mm'
            }
        ]
        'end': '(?:,\\s*([\\d*]))?\\s*(?=//|\\{|$)'
        'endCaptures':
            '1': 'name': 'constant.numeric.kspcfg.mm'
    }
]
'repository':
    'datatypes':
        {
            'comment': 'These types are found in any key value.'
            'patterns': [
                {
                    'match': '(?:[a-z0-9]+\\-){4}[a-z0-9]+'
                    'captures':
                        '0': 'name': 'constant.numeric.guid.kspcfg'
                }
                {
                    'match': '[Tt]rue|[Ff]alse'
                    'captures':
                        '0': 'name': 'constant.language.kspcfg'
                }
                {
                    'match': '-?[0-9\\.]+[Ee]?-?[0-9\\.]*|Nan|Infinity|None'
                    'captures':
                        '0': 'name': 'constant.numeric.kspcfg'
                }
                {
                    'match': '.*[a-zA-Z](?<!\\d[Ee]).*(?<!\\})'
                    'captures':
                        '0': 'name': 'string.unquoted.kspcfg'
                }
            ]
        }
    'needs-block':
        {
            'match': '(:NEEDS)\\s*\\[\\s*(!?)(\\w+)(?:(\\s*[&|]\\s*!?\\s*)(\\w+))*\\s*\\]'
            'captures':
                '1': 'name': 'support.function.kspcfg.mm'
                '2': 'name': 'keyword.operator.kspcfg.mm'
                '3': 'name': 'entity.name.function.kspcfg.mm'
                '4': 'name': 'keyword.operator.kspcfg.mm'
                '5': 'name': 'entity.name.function.kspcfg.mm'
        }
    'has-block':
        {
            'begin': '(:HAS)\\s*\\['
            'beginCaptures':
                '1': 'name': 'support.function.kspcfg.mm'
            'patterns': [
                {
                    'comment': 'Select a node'
                    'match': '([-!@](?<![~#]))?([a-zA-Z]+)\\[\\s*([\\w*?]+)\\s*\\]'
                    'captures':
                        '1': 'name': 'support.function.kspcfg.mm'
                        '2': 'name': 'support.class.kspcfg.mm'
                        '3': 'name': 'entity.name.function.kspcfg.mm'
                }
                {
                    'comment': 'Select a key'
                    'begin': '([~#](?<![-!@]))?([a-zA-Z]+)\\['
                    'beginCaptures':
                        '1': 'name': 'support.function.kspcfg.mm'
                        '2': 'name': 'variable.other.kspcfg.mm'
                    'patterns': [
                        { 'include': '#data-types' }
                    ]
                    'end': '\\]'
                }
                { 'include': '#has-block' }
            ]
            'end': '\\]'
        }
