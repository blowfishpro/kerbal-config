'scopeName': 'source.ksp-cfg'
'filetypes': ['cfg', 'craft', 'sfs']
'name': 'Kerbal Space Program Config'
'patterns': [
    {
        'match': '^\\s*([\\w]+(?:/[\\w]+)*)\\s*\\{?(?=//|$)'
        'captures':
            '1': 'name': 'support.class.kspcfg'
    }
    { 'include': '#namefield' }
    { 'include': '#field' }
    { 'include': '#comments' }
    {
        'match': ':NEEDS|:FOR|:HAS|:AFTER|:FINAL'
        'captures':
            '0': 'name': 'support.function.kspcfg.mm'
    }
    {
        'match': '([-@%!+$#])'
        'captures':
            '1': 'name': 'support.function.kspcfg.mm'
    }
]
'repository':
    'namefield':
        {
            'comment': 'Names are special fields, defining the name of the block.'
            'match': '(name)\\s*=\\s*(.+)'
            'captures':
                '1': 'name': 'variable.other.kspcfg'
                '2': 'name': 'entity.name.function'
        }
    'field':
        {
            'comment': 'Fields are a field name, plus a value'
            'begin': '(\\w+ ?\\w+)\\s*='
            'beginCaptures':
                '1': 'name': 'variable.other.kspcfg'
            'patterns': [
                {
                    'include': '#datatypes'
                }
            ]
            'end': '(?=//|$)'
        }
    'datatypes':
        {
            'comment': 'These types are found in any field.'
            'patterns': [
                {
                    'match': '(?:[a-z0-9]+\\-){4}[a-z0-9]+'
                    'captures':
                        '0': 'name': 'constant.numeric.guid.kspcfg'
                }
                {
                    'match': '[Tt]rue|[Ff]alse'
                    'captures':
                        '0': 'name': 'constant.language.kspcfg'
                }
                {
                    'match': '-?[0-9\\.]+[Ee]?-?[0-9\\.]*|Nan|Infinity|None'
                    'captures':
                        '0': 'name': 'constant.numeric.kspcfg'
                }
                {
                    'match': '.*[a-zA-Z](?<!\\d[Ee]).*'
                    'captures':
                        '0': 'name': 'string.unquoted.kspcfg'
                }
            ]
        }
    'comments':
        {
            'match': '(//.*)'
            'captures':
                '0': 'name': 'comment.line.double-slash.kspcfg'
            'comment': 'Anything after 2 slashes is a comment.'
        }
